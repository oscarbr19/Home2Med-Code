@page "/eps/createpatient"
@using Home2Med.Client.Pages.Components
@inject IServicePatient patient_i
@inject NavigationManager navigationManager


<nav class="navbar navbar-expand-sm navbar-h2m bg-prima mb-3">
   <div class="container">
      <a class="navbar-brand" href="#"><strong>E P S - Creación Paciente</strong></a>
   </div>
</nav>

<FormPatient Patient = "Patient" OnValidSubmit="Create"></FormPatient>

@code {
   private Patient Patient = new Patient();
private async Task Create()
   {
      var httpResponse = await patient_i.Post("api/patients", Patient);
      if (httpResponse.Error)
      {
         var body = await httpResponse.HttpResponseMessage.Content.ReadAsStringAsync();
         Console.WriteLine(body);
      }
      else
      {
         navigationManager.NavigateTo("/eps/createpatient");
      }
      Console.WriteLine($"Nombre {Patient.PatientName}");
      Console.WriteLine($"Tipo de Documento {Patient.PatientDocumentType}");
      Console.WriteLine($"Documento {Patient.PatientDocument}");
      Console.WriteLine($"Genero {Patient.PatientGender}");
      Console.WriteLine($"Telefono {Patient.PatientPhone}");
      Console.WriteLine($"Dirección de Residencia {Patient.PatientAddress}");
      Console.WriteLine($"Georeferenciación {Patient.PatientGeorreferentiation}");
      Console.WriteLine($"Diagnóstico {Patient.PatientDiagnosis}");
      Console.WriteLine($"Médico Tratante {Patient.PatientDoctor}");
      Console.WriteLine($"EPS {Patient.PatientEPS}");
      Console.WriteLine($"Estado {Patient.PatientStatus}");

   }
}